{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","citiesList","cities","filterCity","filteredCities","selectedCities","isChecked","searchCity","bind","selectCities","clearSelected","deleteSelected","selectAll","event","inputCity","currentTarget","value","this","filter","item","id","includes","toLowerCase","setState","selectedId","selectedCity","length","prevState","filteredSelected","findIndex","newSelectedArray","splice","city","newArr","some","className","htmlFor","type","name","placeholder","onChange","onClick","map","isSelected","key","checked","alt","src","chineseName","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96ab3351.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport cities from './cities-of-china.json';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n      citiesList: cities.cities,\n      filterCity: '',\n      filteredCities: [],\n      selectedCities: [],\n      isChecked: false\n    }\n    this.searchCity = this.searchCity.bind(this);\n    this.selectCities = this.selectCities.bind(this);\n    this.clearSelected = this.clearSelected.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.selectAll = this.selectAll.bind(this);\n  }\n\n  searchCity(event) {\n    let inputCity = event.currentTarget.value;\n    let cities = this.state.citiesList.filter(item => item.id.includes(inputCity.toLowerCase()))\n    this.setState({filterCity: inputCity, filteredCities: cities});\n  }\n\n  selectCities (event) {\n    const selectedId = event.currentTarget.id;\n    const selectedCity = this.state.citiesList.filter(item => item.id === selectedId)[0];\n\n    const repeatedItems = this.state.selectedCities.filter(item => item.id === selectedCity.id);\n    if( repeatedItems.length === 0) {\n      this.setState(prevState => ({\n        selectedCities: [...prevState.selectedCities, selectedCity]\n      }),);\n    } else {\n      const filteredSelected = this.state.selectedCities.filter(item => item.id !== selectedCity.id);\n      this.setState({selectedCities : filteredSelected});\n    }\n  }\n\n  deleteSelected(event) {\n    const selectedId = event.currentTarget.id;\n    const selectedCity = this.state.selectedCities.findIndex(item => item.id === selectedId);\n    const newSelectedArray = this.state.selectedCities.splice(selectedCity, 1);\n    this.setState({selectedCities: newSelectedArray});\n  }\n\n  clearSelected() {\n    this.setState({selectedCities: []});\n  }\n\n  isSelected(city) {\n    if(this.state.selectedCities.length !== 0) {\n      const selected = this.state.selectedCities.filter(item => item.id === city.id);\n      if(selected.length !== 0) {\n        return 'checked';\n      }\n    }\n  }\n\n  selectAll() {\n    if (this.state.isChecked === true) {\n      if (this.state.filteredCities.length === 0) {\n        this.setState({selectedCities : [], isChecked: !this.state.isChecked});\n      } else {\n        const newArr = this.state.selectedCities.filter(city => this.state.filteredCities.some(item => city.id !== item.id));\n        this.setState({selectedCities: newArr, isChecked: !this.state.isChecked})\n      }\n    } else {\n      if (this.state.filteredCities.length === 0) {\n        this.setState({selectedCities : this.state.citiesList, isChecked: !this.state.isChecked});\n      } else {\n        this.setState({selectedCities: this.state.filteredCities, isChecked: !this.state.isChecked});\n      }\n    }\n  }\n\n  render () {\n    const { citiesList, filterCity, selectedCities, filteredCities } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"china__header\">\n          <h1 className=\"china__title\">Cities of China</h1>\n        </header>\n        <main className=\"main-content\">\n          <div className=\"column-1\">\n            <div className=\"search\">\n              <label htmlFor=\"cities\" className=\"search__label\"></label>\n              <i className=\"fas fa-search\"></i>\n              <input type=\"text\" name=\"cities\" className=\"search__input\" placeholder=\"Search by name\" onChange={this.searchCity} />\n            </div>\n            <div className=\"number-elements\">\n              <input type=\"checkbox\" className=\"column-1__counter\" onClick={this.selectAll} />{filteredCities.length === 0 && filterCity === '' ? citiesList.length : filteredCities.length} items\n            </div>\n            <div className=\"cities\">\n              <ul className=\"cities__list\">\n                {filteredCities.length === 0 && filterCity === '' ?\n                  citiesList\n                    .map(item =>\n                      <li className={`cities__list--item ${this.isSelected(item)}`} key={item.id} id={item.id} onClick={this.selectCities}>\n                        <input type=\"checkbox\" value={item.id} className=\"item__checkbox\" checked={this.isSelected(item)} />\n                        <img className=\"item__image\" alt=\"city\" src=\"images/city1.png\"/>\n                        <div className=\"item__info\">\n                          <div className=\"item__name\">{item.name}</div>\n                          <div className=\"item__chinese-name\">{item.chineseName}</div>\n                        </div>\n                      </li>\n                  )\n                :\n                filteredCities\n                  .map(item =>\n                    <li className={`cities__list--item ${this.isSelected(item)}`} key={item.id} id={item.id} onClick={this.selectCities}>\n                      <input type=\"checkbox\" value={item.id} className=\"item__checkbox\" checked={this.isSelected(item)} />\n                      <img className=\"item__image\" alt=\"city\" src=\"images/city1.png\"/>\n                      <div className=\"item__info\">\n                        <div className=\"item__name\">{item.name}</div>\n                        <div className=\"item__chinese-name\">{item.chineseName}</div>\n                      </div>\n                    </li>\n                  )\n                }\n              </ul>\n            </div>\n          </div>\n          <div className=\"column-2\">\n            <div className=\"top-content\">\n              <div className=\"column-2__counter\">{selectedCities.length} items</div>\n              <div className=\"column-2__clear\" onClick={this.clearSelected}>CLEAR</div>\n            </div>\n            <div className=\"selected-cities\">\n              <ul className=\"selected-cities__list\">\n                {selectedCities.length !== 0 ?\n                  selectedCities.map(item =>\n                    <li className=\"cities__list--item\" key={item.id} id={item.id} onClick={this.selectCities}>\n                      <img className=\"item__image\" alt=\"city\" src=\"images/city1.png\" />\n                      <div className=\"item__info\">\n                        <div className=\"item__name\">{item.name}</div>\n                        <div className=\"item__chinese-name\">{item.chineseName}</div>\n                      </div>\n                      <div className=\"item__close\"><i className=\"fas fa-times\"></i></div>\n                    </li>\n                  )\n                  : null\n                }\n              </ul>\n            </div>\n          </div>\n        </main>\n        {/* <footer></footer> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}